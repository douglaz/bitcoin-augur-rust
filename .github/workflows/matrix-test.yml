name: Matrix Testing

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-matrix:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]
        include:
          # Additional specific test combinations
          - os: ubuntu-latest
            rust: beta
          - os: ubuntu-latest
            rust: nightly
            experimental: true
    
    continue-on-error: ${{ matrix.experimental == true }}
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.rust }}-cargo-
          ${{ matrix.os }}-cargo-
    
    - name: Check formatting (stable only)
      if: matrix.rust == 'stable'
      run: cargo fmt --all --check
    
    - name: Run clippy
      run: cargo clippy --all-targets -- -D warnings
      continue-on-error: ${{ matrix.experimental == true }}
    
    - name: Build
      run: cargo build --all-features --verbose
    
    - name: Run tests
      run: cargo test --all-features --verbose
    
    - name: Run doc tests
      run: cargo test --doc --all-features
    
    - name: Build documentation
      run: cargo doc --no-deps --all-features
    
    - name: Check for unused dependencies
      if: matrix.rust == 'stable' && matrix.os == 'ubuntu-latest'
      run: |
        cargo install cargo-udeps --locked || true
        cargo +nightly udeps --all-targets || true
      continue-on-error: true

  test-features:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        features: 
          - ""  # No features
          - "--all-features"  # All features
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: features-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.features }}
        restore-keys: |
          features-cargo-${{ hashFiles('**/Cargo.lock') }}-
          features-cargo-
    
    - name: Build with features ${{ matrix.features }}
      run: cargo build ${{ matrix.features }} --verbose
    
    - name: Test with features ${{ matrix.features }}
      run: cargo test ${{ matrix.features }} --verbose