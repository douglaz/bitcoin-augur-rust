name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  schedule:
    - cron: '0 0 * * 0'  # Weekly security audit

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Setup Nix cache
        uses: cachix/cachix-action@v12
        with:
          name: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      
      - name: Build with Nix
        run: nix develop -c cargo build --all --release
      
      - name: Run tests with Nix
        run: nix develop -c cargo test --all
      
      - name: Run clippy with Nix
        run: nix develop -c cargo clippy --all -- -D warnings
      
      - name: Check formatting
        run: nix develop -c cargo fmt --all -- --check

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Run benchmarks
        run: nix develop -c cargo bench --all

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Generate coverage
        run: nix develop -c cargo tarpaulin --all --out xml --exclude-files 'fuzz/*' --exclude-files 'tests/*'
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./cobertura.xml
          fail_ci_if_error: false

  fuzz:
    name: Fuzz Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      
      - name: Run fuzz tests
        run: |
          # Run each fuzz target for 30 seconds in CI
          ./scripts/run_fuzz_tests.sh all 30

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        run: cargo audit

  dependency-check:
    name: Dependency License Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install cargo-deny
        run: cargo install cargo-deny
      
      - name: Check dependencies
        run: cargo deny check

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      bitcoind:
        image: ruimarinho/bitcoin-core:latest
        ports:
          - 8332:8332
        options: >-
          --health-cmd "bitcoin-cli -regtest getblockcount"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Run integration tests
        env:
          BITCOIN_RPC_URL: http://localhost:8332
          BITCOIN_RPC_USER: test
          BITCOIN_RPC_PASSWORD: test
        run: nix develop -c cargo test --package bitcoin-augur-integration-tests

  stress-tests:
    name: Stress Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Run stress tests
        run: nix develop -c cargo test --package bitcoin-augur stress_test -- --test-threads=1 --nocapture

  nix-flake-check:
    name: Nix Flake Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Nix
        uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      
      - name: Check Nix flake
        run: nix flake check